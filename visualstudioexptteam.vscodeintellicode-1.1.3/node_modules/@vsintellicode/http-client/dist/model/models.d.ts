export * from './modelBlobAzureBlobStorageResponse';
export * from './modelBlobResponse';
export * from './modelCodebaseCreateRequest';
export * from './modelCodebaseResponse';
export * from './modelCreateRequest';
export * from './modelInputCreateRequest';
export * from './modelInputDetailsResponse';
export * from './modelInputResponse';
export * from './modelOutputDetailsResponse';
export * from './modelOutputResponse';
export * from './modelOutputTrainingDetails';
export * from './modelOutputTrainingResponse';
export * from './modelOutputTrainingSummary';
export * from './modelResponse';
export * from './redeemLinkRequest';
export * from './shareLinkRequest';
export * from './shareLinkResponse';
export * from './user';
export * from './userModel';
export * from './versionExtendedDetailsResponse';
import localVarRequest = require('request');
export declare class ObjectSerializer {
    static findCorrectType(data: any, expectedType: string): any;
    static serialize(data: any, type: string): any;
    static deserialize(data: any, type: string): any;
}
export interface Authentication {
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class HttpBasicAuth implements Authentication {
    username: string;
    password: string;
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class ApiKeyAuth implements Authentication {
    private location;
    private paramName;
    apiKey: string;
    constructor(location: string, paramName: string);
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class OAuth implements Authentication {
    accessToken: string;
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class VoidAuth implements Authentication {
    username: string;
    password: string;
    applyToRequest(_: localVarRequest.Options): void;
}
